plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id("com.apollographql.apollo3").version("3.7.1")

}

android {
    namespace 'com.antonyhayek.graphartists'
    compileSdk 32

    defaultConfig {
        applicationId "com.antonyhayek.graphartists"
        minSdk 24
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    apollo {
        packageName.set("com.antonyhayek")
    }
    // Always show the result of every unit test when running via command line, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true

        // ...
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation("com.apollographql.apollo3:apollo-runtime:3.7.1")

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_viewmodel"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_viewmodel"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:$hiltCompiler"

    //jetpack navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.13.1'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    //Okhttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp3"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3"

    //paging3
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"
   // implementation "androidx.paging:paging-common-ktx:$pagingVersion"

    // AndroidX Test - Instrumented testing
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "org.robolectric:robolectric:4.8"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.4"
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.4.0'
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.mockito:mockito-core:3.3.3"
    testImplementation "io.mockk:mockk:1.11.0"

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
}